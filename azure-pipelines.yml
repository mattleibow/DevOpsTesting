pool:
  vmImage: 'windows-latest'

stages:
  - stage: A
    jobs:
      - job: A1
        steps:
          - checkout: none
          - script: echo "hi" > $(Build.ArtifactStagingDirectory)\file1.txt
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifact: artifact1
      - job: A2
        steps:
          - checkout: none
          - script: echo "hi" > $(Build.ArtifactStagingDirectory)\file2.txt
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifact: artifact2
      - job: A3
        steps:
          - checkout: none
          - script: echo "hi" > $(Build.ArtifactStagingDirectory)\file3.txt
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifact: artifact3

  - stage: B
    dependsOn: A
    variables:
      jobsInStageA: $[ convertToJson(stageDependencies.A) ]
    jobs:
      - job: B1
        steps:
          - checkout: none
          - pwsh: |
              $test=@'
              $(jobsInStageA)
              '@

              $json = ConvertFrom-Json $test
              $objects = $json | Get-Member -MemberType NoteProperty
              $names = $objects | ForEach-Object { $json."$($_.Name)".name }
              Write-Host "Found $($names.Length) items:"
              $names | ForEach-Object { Write-Host " - $_" }
              foreach ($name in $names) {
                Write-Host "Downloading '$name'..."
                az pipelines runs artifact download `
                  --artifact-name "$names" `
                  --path $(System.ArtifactStagingDirectory) `
                  --run-id $(Build.BuildId)
              }
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifact: merged
